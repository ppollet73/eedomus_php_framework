{
    "basePath":"http://petstore.swagger.wordnik.com/api",
    "swaggerVersion":"1.2",
    "apiVersion":"1.0.0",
    "resourcePath":"/pet",
    "apis":[
        {
            "path":"/pet/findByStatus",
            "operations":[
                {
                    "method":"GET",
                    "summary":"Finds Pets by status",
                    "nickname":"findPetsByStatus",
                    "type":"array",
                    "items":{
                        "$ref":"Pet"
                    },
                    "parameters":[
                        {
                            "paramType":"query",
                            "name":"status",
                            "type":"string",
                            "required":true,
                            "description":"Status values that need to be considered for filter",
                            "enum":[
                                "available",
                                "pending",
                                "sold"
                            ],
                            "defaultValue":"available"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":400,
                            "message":"Invalid status value"
                        }
                    ],
                    "notes":"Multiple status values can be provided with comma seperated strings"
                }
            ]
        },
        {
            "path":"/pet/findByTags",
            "operations":[
                {
                    "method":"GET",
                    "summary":"Finds Pets by tags",
                    "nickname":"findPetsByTags",
                    "type":"array",
                    "items":{
                        "$ref":"Pet"
                    },
                    "parameters":[
                        {
                            "paramType":"query",
                            "name":"tags",
                            "type":"string",
                            "required":true,
                            "description":"Tags to filter by"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":400,
                            "message":"Invalid tag value"
                        }
                    ],
                    "notes":"Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.",
                    "deprecated":"true"
                }
            ]
        },
        {
            "path":"/pet/{petId}",
            "operations":[
                {
                    "method":"GET",
                    "summary":"Find pet by ID",
                    "nickname":"getPetById",
                    "type":"Pet",
                    "parameters":[
                        {
                            "paramType":"path",
                            "name":"petId",
                            "type":"integer",
                            "required":true,
                            "description":"ID of pet that needs to be fetched",
                            "format":"int64",
                            "minimum":"1.0",
                            "maximum":"100000.0"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":400,
                            "message":"Invalid ID supplied"
                        },
                        {
                            "code":404,
                            "message":"Pet not found"
                        }
                    ],
                    "notes":"Returns a pet based on ID"
                }
            ]
        }
    ],
    "models":{
        "Pet":{
            "id":"Pet",
            "properties":{
                "id":{
                    "description":"Unique identifier for the Pet",
                    "type":"integer",
                    "format":"int64",
                    "minimum":"0.0",
                    "maximum":"100.0"
                },
                "name":{
                    "description":"Friendly name of the pet",
                    "type":"string"
                },
                "category":{
                    "description":"Category the pet is in",
                    "$ref":"Category"
                },
                "photoUrls":{
                    "description":"Image URLs",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "tags":{
                    "description":"Tags assigned to this pet",
                    "type":"array",
                    "items":{
                        "$ref":"Tag"
                    }
                },
                "status":{
                    "description":"pet status in the store",
                    "type":"string",
                    "enum":[
                        "available",
                        "pending",
                        "sold"
                    ]
                }
            },
            "required":[
                "id",
                "name"
            ]
        },
        "Category":{
            "id":"Category",
            "properties":{
                "id":{
                    "description":"Category unique identifier",
                    "type":"integer",
                    "format":"int64",
                    "minimum":"0.0",
                    "maximum":"100.0"
                },
                "name":{
                    "description":"Name of the category",
                    "type":"string"
                }
            }
        },
        "Tag":{
            "id":"Tag",
            "properties":{
                "id":{
                    "description":"Unique identifier for the tag",
                    "type":"integer",
                    "format":"int64"
                },
                "name":{
                    "description":"Friendly name for the tag",
                    "type":"string"
                }
            }
        }
    },
    "produces":[
        "application/json",
        "application/xml",
        "text/plain",
        "text/html"
    ]
}